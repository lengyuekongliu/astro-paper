---
import sharp from "sharp";
import path from "path";
import { rgbaToThumbHash, thumbHashToDataURL } from "thumbhash";
import { getImageUrl } from "@utils/image-utils";
import BlurHash from "./BlurHash.vue";

interface Props {
    src: string;
    alt?: string;
    class?: string;
}

const { class: className, src, alt } = Astro.props;

const image = sharp(path.resolve(`./src/${src}`)).resize(100, 100, { fit: "inside" });
const { data, info } = await image.ensureAlpha().raw().toBuffer({ resolveWithObject: true });
const binaryThumbHash = rgbaToThumbHash(info.width, info.height, data);
const placeholderURL = thumbHashToDataURL(binaryThumbHash);

const img = await getImageUrl(src);
---

<div class=`relative h-full ${className}`>
    <img src={img.src} alt={alt} class="w-full h-full object-cover object-center" />
    <BlurHash client:load src={img.src} dataUrl={placeholderURL} alt={alt} class=`absolute top-0 w-full h-full object-cover object-center` />
</div>
